@*@model IEnumerable<Teashop2.Models.Product>*@
@model PaginatedList<Teashop2.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<h1>Produkty</h1>

<p>
    <a asp-action="Create">Dodaj nowy produkt</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Wyszukaj produkty: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Wyszukaj" class="btn btn-primary" />
            <a asp-action="Index">Wyczyść filtr</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nazwa</a>
            </th>
            <th>
                Opis
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Cena [zł]</a>
            </th>
            <th>
                Ilość na stanie
            </th>
            <th>
                Dostępność
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuantityOnStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsAvaliable)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edycja</a>
                <a asp-action="Details" asp-route-id="@item.Id">Szczegóły</a>
            </td>
        </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="align-content-center">
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-primary @prevDisabled">
        <i class="bi bi-arrow-left"></i>
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-primary @nextDisabled">
        <i class="bi bi-arrow-right"></i>
    </a>
</div>
